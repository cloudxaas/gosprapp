// Code generated by qtc from "mainpage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// Main page template. Implements BasePage methods.
//

//line templates/html/mainpage.qtpl:3
package html

//line templates/html/mainpage.qtpl:3
import "github.com/cloudwego/hertz/pkg/app"

//line templates/html/mainpage.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/html/mainpage.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/html/mainpage.qtpl:6
type MainPage struct {
	CTX *app.RequestContext
}

//line templates/html/mainpage.qtpl:12
func (p *MainPage) StreamTitle(qw422016 *qt422016.Writer) {
//line templates/html/mainpage.qtpl:12
	qw422016.N().S(`
	This is the main page
`)
//line templates/html/mainpage.qtpl:14
}

//line templates/html/mainpage.qtpl:14
func (p *MainPage) WriteTitle(qq422016 qtio422016.Writer) {
//line templates/html/mainpage.qtpl:14
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/html/mainpage.qtpl:14
	p.StreamTitle(qw422016)
//line templates/html/mainpage.qtpl:14
	qt422016.ReleaseWriter(qw422016)
//line templates/html/mainpage.qtpl:14
}

//line templates/html/mainpage.qtpl:14
func (p *MainPage) Title() string {
//line templates/html/mainpage.qtpl:14
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/html/mainpage.qtpl:14
	p.WriteTitle(qb422016)
//line templates/html/mainpage.qtpl:14
	qs422016 := string(qb422016.B)
//line templates/html/mainpage.qtpl:14
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/html/mainpage.qtpl:14
	return qs422016
//line templates/html/mainpage.qtpl:14
}

//line templates/html/mainpage.qtpl:17
func (p *MainPage) StreamBody(qw422016 *qt422016.Writer) {
//line templates/html/mainpage.qtpl:17
	qw422016.N().S(`

<script src="https://js.hcaptcha.com/1/api.js" async defer></script>
    <div id="container" class="col">
<center>
&nbsp;<br>
<img src="/m/s.png"><p>
Use SPRAPP Account
</center>
        <div class="login-signup-tab">
<p>

<div class="tabs">
  <input type="radio" name="tabs" id="tabone" checked="checked">
  <label for="tabone">Login</label>
  <div class="tab">
                <form method="POST" action="/u/l">
                    <label for="e">Email</label>
                    <input id="e" type="email" name="e" required>
                    <label for="p">Password</label>
                    <input id="p" type="password" name="p" required>
                    <center>
                    <div class="h-captcha" data-sitekey="f9a84b58-344d-4054-81b7-f123751f8871"></div>
                    </center>
                    <input type="submit" value="Log In">
                </form>
  </div>
  <input type="radio" name="tabs" id="tabtwo">
  <label for="tabtwo">Sign Up</label>
  <div class="tab">


<script src="/m/u.js"></script>


<div id="signupmsg">
<form id="signup-form" action="/u/s" method="post" onsubmit="submitForm(event)">
    <label for=e>Email</label>
    <input id=email type=email name=e required>
    <div id="email-error" class="error"></div>

    <label for=o>Password</label>
    <input id=password type=password name=p required>
    <div id="password-error" class="error"></div>

    <label for=f>First Name</label>
    <input id=fname name=f required>
    <div id="fname-error" class="error"></div>

    <label for=l>Last Name</label>
    <input id=lname name=l required>
    <div id="lname-error" class="error"></div>

    <label for=b>Date of Birth</label>
    <input id=dob type=date>
    <input type=hidden id=b name=b>
    <div id="dob-error" class="error"></div>

    <label for=g>Gender</label>
    <select id=gender name=g>
        <option value>-</option>
        <option value=1>Male</option>
        <option value=0>Female</option>
        <option value=2>Rather Not Say</option>
        <option value=3>Other</option>
    </select>
    <div id="gender-error" class="error"></div>

    <label for=n>Pronouns</label>
    <select id=pronouns name=n>
        <option value>-</option>
        <option value=1>He</option>
        <option value=0>She</option>
        <option value=2>They</option>
    </select>
    <div id="pronouns-error" class="error"></div>

    <div class="h-captcha" data-sitekey="f9a84b58-344d-4054-81b7-f123751f8871"></div>
    <div id="captcha-error" class="error"></div>
    <div id="general-error" class="error"></div>
        <input id="signup-button" type="submit" value="Signup">
    </form>

</div>
  </div>
  
  <input type="radio" name="tabs" id="tabthree">
  <label for="tabthree">Reset Password</label>
  <div class="tab">
                <form method="POST" action="/u/r">
                    <label for="e">Email</label>
                    <input id="email" type="email" name="e" required>
<center>
<div class="h-captcha" data-sitekey="f9a84b58-344d-4054-81b7-f123751f8871"></div>
</center>
                    <input type="submit" value="Reset">
                </form>
  </div>
</div>


        </div>
    </div>
`)
//line templates/html/mainpage.qtpl:120
}

//line templates/html/mainpage.qtpl:120
func (p *MainPage) WriteBody(qq422016 qtio422016.Writer) {
//line templates/html/mainpage.qtpl:120
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/html/mainpage.qtpl:120
	p.StreamBody(qw422016)
//line templates/html/mainpage.qtpl:120
	qt422016.ReleaseWriter(qw422016)
//line templates/html/mainpage.qtpl:120
}

//line templates/html/mainpage.qtpl:120
func (p *MainPage) Body() string {
//line templates/html/mainpage.qtpl:120
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/html/mainpage.qtpl:120
	p.WriteBody(qb422016)
//line templates/html/mainpage.qtpl:120
	qs422016 := string(qb422016.B)
//line templates/html/mainpage.qtpl:120
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/html/mainpage.qtpl:120
	return qs422016
//line templates/html/mainpage.qtpl:120
}
